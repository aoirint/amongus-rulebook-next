import type { GetStaticPaths, GetStaticProps, NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import styles from '../../styles/Home.module.css'
import { ParsedUrlQuery } from 'querystring'
import assert from 'assert'
import { loadRule, loadRules, Rule } from '../../lib/rules'

interface Props {
  rule: Rule
}

const RulePage: NextPage<Props> = ({
  rule
}) => {
  return (
    <div className={styles.container}>
      <Head>
        <title>{`${rule.name} - Among Us Rulebook`}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          {rule.name}
        </h1>
        <p>
          推奨人数: {rule.recommendedParticipants}
        </p>
        <p>
          {rule.imageUrls.map((imageUrl, index) => (
            <Image src={imageUrl} width="640px" height="360px" key={index} />
          ))}
        </p>
      </main>
    </div>
  )
}

interface UrlQuery extends ParsedUrlQuery {
  ruleId: string
}

export const getStaticPaths: GetStaticPaths<UrlQuery> = async () => {
  const rules = loadRules()

  const paths = rules.map((rule) => {
    return {
      params: {
        ruleId: rule.id
      }
    }
  })

  return {
    paths,
    fallback: false
  }
}

export const getStaticProps: GetStaticProps<Props, UrlQuery> = async (context) => {
  assert(context.params !== undefined)
  const { ruleId } = context.params

  const rule = loadRule(ruleId)

  return {
    props: {
      rule
    }
  }
}

export default RulePage
